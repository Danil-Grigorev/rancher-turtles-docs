"use strict";(self.webpackChunkmysite=self.webpackChunkmysite||[]).push([[507],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>m});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),p=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},l=function(e){var r=p(e.components);return n.createElement(c.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},v=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(t),v=a,m=u["".concat(c,".").concat(v)]||u[v]||d[v]||i;return t?n.createElement(m,o(o({ref:r},l),{},{components:t})):n.createElement(m,o({ref:r},l))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=v;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}v.displayName="MDXCreateElement"},917:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=t(7462),a=(t(7294),t(3905));const i={sidebar_position:2},o="Add Infrastructure Provider",s={unversionedId:"tasks/capi-operator/add_infrastructure_provider",id:"tasks/capi-operator/add_infrastructure_provider",title:"Add Infrastructure Provider",description:"This section describes how an infrastructure provider such as Azure could be added using Cluster API Operator.",source:"@site/docs/tasks/capi-operator/add_infrastructure_provider.md",sourceDirName:"tasks/capi-operator",slug:"/tasks/capi-operator/add_infrastructure_provider",permalink:"/rancher-turtles-docs/pr-preview/pr-1/docs/tasks/capi-operator/add_infrastructure_provider",draft:!1,editUrl:"https://github.com/rancher-sandbox/rancher-turtles-docs/tree/main/docs/docs/tasks/capi-operator/add_infrastructure_provider.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Basic Cluster API Provider Installation",permalink:"/rancher-turtles-docs/pr-preview/pr-1/docs/tasks/capi-operator/basic_cluster_api_provider_installation"},next:{title:"Installing the CoreProvider",permalink:"/rancher-turtles-docs/pr-preview/pr-1/docs/tasks/capi-operator/installing_core_provider"}},c={},p=[{value:"Installing Azure Infrastructure Provider",id:"installing-azure-infrastructure-provider",level:3},{value:"Deleting providers",id:"deleting-providers",level:3}],l={toc:p},u="wrapper";function d(e){let{components:r,...t}=e;return(0,a.kt)(u,(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"add-infrastructure-provider"},"Add Infrastructure Provider"),(0,a.kt)("p",null,"This section describes how an infrastructure provider such as ",(0,a.kt)("inlineCode",{parentName:"p"},"Azure")," could be added using ",(0,a.kt)("inlineCode",{parentName:"p"},"Cluster API Operator"),"."),(0,a.kt)("h3",{id:"installing-azure-infrastructure-provider"},"Installing Azure Infrastructure Provider"),(0,a.kt)("p",null,"Next, install ",(0,a.kt)("a",{parentName:"p",href:"https://capz.sigs.k8s.io/"},"Azure Infrastructure Provider"),". Before that ensure that ",(0,a.kt)("inlineCode",{parentName:"p"},"capz-system")," namespace exists."),(0,a.kt)("p",null,"Since the provider requires variables to be set, create a secret containing them in the same namespace as the provider. It is also recommended to include a ",(0,a.kt)("inlineCode",{parentName:"p"},"github-token")," in the secret. This token is used to fetch the provider repository, and it is required for the provider to be installed. The operator may exceed the rate limit of the GitHub API without the token. Like ",(0,a.kt)("a",{parentName:"p",href:"https://cluster-api.sigs.k8s.io/clusterctl/overview.html?highlight=github_token#avoiding-github-rate-limiting"},"clusterctl"),", the token needs only the ",(0,a.kt)("inlineCode",{parentName:"p"},"repo")," scope."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: azure-variables\n  namespace: capz-system\ntype: Opaque\nstringData:\n  AZURE_CLIENT_ID_B64: Zm9vCg==\n  AZURE_CLIENT_SECRET_B64: Zm9vCg==\n  AZURE_SUBSCRIPTION_ID_B64: Zm9vCg==\n  AZURE_TENANT_ID_B64: Zm9vCg==\n  github-token: ghp_fff\n---\napiVersion: operator.cluster.x-k8s.io/v1alpha1\nkind: InfrastructureProvider\nmetadata:\n name: azure\n namespace: capz-system\nspec:\n version: v1.9.3\n configSecret:\n   name: azure-variables\n")),(0,a.kt)("h3",{id:"deleting-providers"},"Deleting providers"),(0,a.kt)("p",null,"To remove the installed providers and all related Kubernetes objectsm just delete the following CRs:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl delete coreprovider cluster-api\nkubectl delete infrastructureprovider azure\n")))}d.isMDXComponent=!0}}]);